{"version":3,"file":"web.development.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACVA;AACA;AACA;;AAEA;;;;;;;;;;ACJA,uBAAuB,mBAAO,CAAC,qFAAoB;;AAEnD;AACA;AACA;;AAEA;;;;;;;;;;ACNA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACNA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACfA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACPA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACNA;AACA;AACA;;AAEA;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,+BAA+B;AAC7E;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;AC3BA;AACA;AACA;;AAEA;;;;;;;;;;ACJA;AACA;AACA;;AAEA;;;;;;;;;;ACJA,cAAc,mBAAO,CAAC,sFAA+B;;AAErD,4BAA4B,mBAAO,CAAC,+FAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA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AAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,IAAI,IAAqC;AACzC,6BAA6B,mBAAO,CAAC,yFAA4B;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;;AAEA;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,kDAAU;AAChC,aAAa,mBAAO,CAAC,4DAAe;;AAEpC,2BAA2B,mBAAO,CAAC,yFAA4B;AAC/D,qBAAqB,mBAAO,CAAC,qEAAkB;;AAE/C;AACA;;AAEA,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,8BAA8B;AAC9B,QAAQ;AACR;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B;AAC5B,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,SAAS,KAAqC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,IAAqC;AAC/C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,KAAqC,4FAA4F,CAAM;AAC7I;AACA;;AAEA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC9kBA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,IAAqC;AACzC,gBAAgB,mBAAO,CAAC,kDAAU;;AAElC;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,uFAA2B;AACtD,EAAE,KAAK,EAIN;;;;;;;;;;;;AClBD;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,sBAAsB;AACtB,uBAAuB;AACvB,uBAAuB;AACvB,eAAe;AACf,kBAAkB;AAClB,gBAAgB;AAChB,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,gBAAgB;AAChB,kBAAkB;AAClB,gBAAgB;AAChB,mBAAmB;AACnB,wBAAwB;AACxB,yBAAyB;AACzB,yBAAyB;AACzB,iBAAiB;AACjB,oBAAoB;AACpB,kBAAkB;AAClB,cAAc;AACd,cAAc;AACd,gBAAgB;AAChB,kBAAkB;AAClB,oBAAoB;AACpB,kBAAkB;AAClB,0BAA0B;AAC1B,cAAc;AACd,GAAG;AACH;;;;;;;;;;;;ACpLa;;AAEb,IAAI,KAAqC,EAAE,EAE1C,CAAC;AACF,EAAE,gIAAyD;AAC3D;;;;;;;;;;;;ACNA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;;;;;;;uXCPD;AACA;;AAEe7F,4C","sources":["webpack://react-native-onyx/web/webpack/universalModuleDefinition","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/createClass.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/extends.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/inherits.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/typeof.js","webpack://react-native-onyx/web/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://react-native-onyx/web/./lib/Logger.js","webpack://react-native-onyx/web/./lib/Onyx.js","webpack://react-native-onyx/web/./lib/OnyxCache.js","webpack://react-native-onyx/web/./lib/SyncQueue.js","webpack://react-native-onyx/web/./lib/createDeferredTask.js","webpack://react-native-onyx/web/./lib/metrics/index.web.js","webpack://react-native-onyx/web/./lib/storage/WebStorage.js","webpack://react-native-onyx/web/./lib/storage/index.web.js","webpack://react-native-onyx/web/./lib/storage/providers/LocalForage.js","webpack://react-native-onyx/web/./lib/withOnyx.js","webpack://react-native-onyx/web/./node_modules/object-assign/index.js","webpack://react-native-onyx/web/./node_modules/prop-types/checkPropTypes.js","webpack://react-native-onyx/web/./node_modules/prop-types/factoryWithTypeCheckers.js","webpack://react-native-onyx/web/./node_modules/prop-types/index.js","webpack://react-native-onyx/web/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://react-native-onyx/web/./node_modules/react-is/cjs/react-is.development.js","webpack://react-native-onyx/web/./node_modules/react-is/index.js","webpack://react-native-onyx/web/external umd \"expensify-common/lib/str\"","webpack://react-native-onyx/web/external umd \"localforage\"","webpack://react-native-onyx/web/external umd \"lodash/merge\"","webpack://react-native-onyx/web/external umd \"react\"","webpack://react-native-onyx/web/external umd \"underscore\"","webpack://react-native-onyx/web/webpack/bootstrap","webpack://react-native-onyx/web/webpack/runtime/global","webpack://react-native-onyx/web/./lib/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"underscore\"), require(\"expensify-common/lib/str\"), require(\"lodash/merge\"), require(\"localforage\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"underscore\", \"expensify-common/lib/str\", \"lodash/merge\", \"localforage\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-native-onyx/web\"] = factory(require(\"underscore\"), require(\"expensify-common/lib/str\"), require(\"lodash/merge\"), require(\"localforage\"), require(\"react\"));\n\telse\n\t\troot[\"react-native-onyx/web\"] = factory(root[\"underscore\"], root[\"expensify-common/lib/str\"], root[\"lodash/merge\"], root[\"localforage\"], root[\"react\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE_underscore__, __WEBPACK_EXTERNAL_MODULE_expensify_common_lib_str__, __WEBPACK_EXTERNAL_MODULE_lodash_merge__, __WEBPACK_EXTERNAL_MODULE_localforage__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","// Logging callback\nlet logger = () => {};\n\n/**\n * Register the logging callback\n *\n * @param {Function} callback\n */\nfunction registerLogger(callback) {\n    logger = callback;\n}\n\n/**\n * Send an alert message to the logger\n *\n * @param {String} message\n */\nfunction logAlert(message) {\n    logger({message: `[Onyx] ${message}`, level: 'alert'});\n}\n\n/**\n * Send an info message to the logger\n *\n * @param {String} message\n */\nfunction logInfo(message) {\n    logger({message: `[Onyx] ${message}`, level: 'info'});\n}\n\nexport {\n    registerLogger,\n    logInfo,\n    logAlert,\n};\n","import _ from 'underscore';\nimport Str from 'expensify-common/lib/str';\nimport lodashMerge from 'lodash/merge';\nimport Storage from './storage';\n\nimport {registerLogger, logInfo, logAlert} from './Logger';\nimport cache from './OnyxCache';\nimport createDeferredTask from './createDeferredTask';\n\n// Keeps track of the last connectionID that was used so we can keep incrementing it\nlet lastConnectionID = 0;\n\n// Holds a mapping of all the react components that want their state subscribed to a store key\nconst callbackToStateMapping = {};\n\n// Stores all of the keys that Onyx can use. Must be defined in init().\nlet onyxKeys = {};\n\n// Holds a list of keys that have been directly subscribed to or recently modified from least to most recent\nlet recentlyAccessedKeys = [];\n\n// Holds a list of keys that are safe to remove when we reach max storage. If a key does not match with\n// whatever appears in this list it will NEVER be a candidate for eviction.\nlet evictionAllowList = [];\n\n// Holds a map of keys and connectionID arrays whose keys will never be automatically evicted as\n// long as we have at least one subscriber that returns false for the canEvict property.\nconst evictionBlocklist = {};\n\n// Optional user-provided key value states set when Onyx initializes or clears\nlet defaultKeyStates = {};\n\n// Connections can be made before `Onyx.init`. They would wait for this task before resolving\nconst deferredInitTask = createDeferredTask();\n\n/**\n * Get some data from the store\n *\n * @private\n * @param {string} key\n * @returns {Promise<*>}\n */\nfunction get(key) {\n    // When we already have the value in cache - resolve right away\n    if (cache.hasCacheForKey(key)) {\n        return Promise.resolve(cache.getValue(key));\n    }\n\n    const taskName = `get:${key}`;\n\n    // When a value retrieving task for this key is still running hook to it\n    if (cache.hasPendingTask(taskName)) {\n        return cache.getTaskPromise(taskName);\n    }\n\n    // Otherwise retrieve the value from storage and capture a promise to aid concurrent usages\n    const promise = Storage.getItem(key)\n        .then((val) => {\n            cache.set(key, val);\n            return val;\n        })\n        .catch(err => logInfo(`Unable to get item from persistent storage. Key: ${key} Error: ${err}`));\n\n    return cache.captureTask(taskName, promise);\n}\n\n/**\n * Returns current key names stored in persisted storage\n * @private\n * @returns {Promise<string[]>}\n */\nfunction getAllKeys() {\n    // When we've already read stored keys, resolve right away\n    const storedKeys = cache.getAllKeys();\n    if (storedKeys.length > 0) {\n        return Promise.resolve(storedKeys);\n    }\n\n    const taskName = 'getAllKeys';\n\n    // When a value retrieving task for all keys is still running hook to it\n    if (cache.hasPendingTask(taskName)) {\n        return cache.getTaskPromise(taskName);\n    }\n\n    // Otherwise retrieve the keys from storage and capture a promise to aid concurrent usages\n    const promise = Storage.getAllKeys()\n        .then((keys) => {\n            _.each(keys, key => cache.addKey(key));\n            return keys;\n        });\n\n    return cache.captureTask(taskName, promise);\n}\n\n/**\n * Checks to see if the a subscriber's supplied key\n * is associated with a collection of keys.\n *\n * @private\n * @param {String} key\n * @returns {Boolean}\n */\nfunction isCollectionKey(key) {\n    return _.contains(_.values(onyxKeys.COLLECTION), key);\n}\n\n/**\n * Checks to see if a given key matches with the\n * configured key of our connected subscriber\n *\n * @private\n * @param {String} configKey\n * @param {String} key\n * @return {Boolean}\n */\nfunction isKeyMatch(configKey, key) {\n    return isCollectionKey(configKey)\n        ? Str.startsWith(key, configKey)\n        : configKey === key;\n}\n\n/**\n * Checks to see if this key has been flagged as\n * safe for removal.\n *\n * @private\n * @param {String} testKey\n * @returns {Boolean}\n */\nfunction isSafeEvictionKey(testKey) {\n    return _.some(evictionAllowList, key => isKeyMatch(key, testKey));\n}\n\n/**\n * Remove a key from the recently accessed key list.\n *\n * @private\n * @param {String} key\n */\nfunction removeLastAccessedKey(key) {\n    recentlyAccessedKeys = _.without(recentlyAccessedKeys, key);\n}\n\n/**\n * Add a key to the list of recently accessed keys. The least\n * recently accessed key should be at the head and the most\n * recently accessed key at the tail.\n *\n * @private\n * @param {String} key\n */\nfunction addLastAccessedKey(key) {\n    // Only specific keys belong in this list since we cannot remove an entire collection.\n    if (isCollectionKey(key) || !isSafeEvictionKey(key)) {\n        return;\n    }\n\n    removeLastAccessedKey(key);\n    recentlyAccessedKeys.push(key);\n}\n\n/**\n * Removes a key previously added to this list\n * which will enable it to be deleted again.\n *\n * @private\n * @param {String} key\n * @param {Number} connectionID\n */\nfunction removeFromEvictionBlockList(key, connectionID) {\n    evictionBlocklist[key] = _.without(evictionBlocklist[key] || [], connectionID);\n\n    // Remove the key if there are no more subscribers\n    if (evictionBlocklist[key].length === 0) {\n        delete evictionBlocklist[key];\n    }\n}\n\n/**\n * Keys added to this list can never be deleted.\n *\n * @private\n * @param {String} key\n * @param {Number} connectionID\n */\nfunction addToEvictionBlockList(key, connectionID) {\n    removeFromEvictionBlockList(key, connectionID);\n\n    if (!evictionBlocklist[key]) {\n        evictionBlocklist[key] = [];\n    }\n\n    evictionBlocklist[key].push(connectionID);\n}\n\n/**\n * Take all the keys that are safe to evict and add them to\n * the recently accessed list when initializing the app. This\n * enables keys that have not recently been accessed to be\n * removed.\n *\n * @private\n * @returns {Promise}\n */\nfunction addAllSafeEvictionKeysToRecentlyAccessedList() {\n    return getAllKeys()\n        .then((keys) => {\n            _.each(evictionAllowList, (safeEvictionKey) => {\n                _.each(keys, (key) => {\n                    if (isKeyMatch(safeEvictionKey, key)) {\n                        addLastAccessedKey(key);\n                    }\n                });\n            });\n        });\n}\n\n/**\n * @private\n * @param {String} collectionKey\n * @returns {Object}\n */\nfunction getCachedCollection(collectionKey) {\n    const collectionMemberKeys = _.filter(cache.getAllKeys(), (\n        storedKey => isKeyMatch(collectionKey, storedKey)\n    ));\n\n    return _.reduce(collectionMemberKeys, (prev, curr) => {\n        const cachedValue = cache.getValue(curr);\n        if (!cachedValue) {\n            return prev;\n        }\n        return ({\n            ...prev,\n            [curr]: cachedValue,\n        });\n    }, {});\n}\n\n/**\n * When a collection of keys change, search for any callbacks matching the collection key and trigger those callbacks\n *\n * @private\n * @param {String} collectionKey\n * @param {Object} collection\n */\nfunction keysChanged(collectionKey, collection) {\n    // Find all subscribers that were added with connect() and trigger the callback or setState() with the new data\n    _.each(callbackToStateMapping, (subscriber) => {\n        if (!subscriber) {\n            return;\n        }\n\n        const isSubscribedToCollectionKey = isKeyMatch(subscriber.key, collectionKey)\n            && isCollectionKey(subscriber.key);\n        const isSubscribedToCollectionMemberKey = subscriber.key.startsWith(collectionKey);\n\n        if (isSubscribedToCollectionKey) {\n            if (_.isFunction(subscriber.callback)) {\n                // eslint-disable-next-line no-use-before-define\n                const cachedCollection = getCachedCollection(collectionKey);\n                _.each(collection, (data, dataKey) => {\n                    subscriber.callback(cachedCollection[dataKey], dataKey);\n                });\n            } else if (subscriber.withOnyxInstance) {\n                subscriber.withOnyxInstance.setState((prevState) => {\n                    const finalCollection = _.clone(prevState[subscriber.statePropertyName] || {});\n                    _.each(collection, (data, dataKey) => {\n                        if (finalCollection[dataKey]) {\n                            lodashMerge(finalCollection[dataKey], data);\n                        } else {\n                            finalCollection[dataKey] = data;\n                        }\n                    });\n\n                    return {\n                        [subscriber.statePropertyName]: finalCollection,\n                    };\n                });\n            }\n        } else if (isSubscribedToCollectionMemberKey) {\n            const dataFromCollection = collection[subscriber.key];\n\n            // If `dataFromCollection` happens to not exist, then return early so that there are no unnecessary\n            // re-renderings of the component\n            if (_.isUndefined(dataFromCollection)) {\n                return;\n            }\n\n            subscriber.withOnyxInstance.setState(prevState => ({\n                [subscriber.statePropertyName]: _.isObject(dataFromCollection)\n                    ? {\n                        ...prevState[subscriber.statePropertyName],\n                        ...dataFromCollection,\n                    }\n                    : dataFromCollection,\n            }));\n        }\n    });\n}\n\n/**\n * When a key change happens, search for any callbacks matching the key or collection key and trigger those callbacks\n *\n * @private\n * @param {String} key\n * @param {*} data\n */\nfunction keyChanged(key, data) {\n    // Add or remove this key from the recentlyAccessedKeys lists\n    if (!_.isNull(data)) {\n        addLastAccessedKey(key);\n    } else {\n        removeLastAccessedKey(key);\n    }\n\n    // Find all subscribers that were added with connect() and trigger the callback or setState() with the new data\n    _.each(callbackToStateMapping, (subscriber) => {\n        if (subscriber && isKeyMatch(subscriber.key, key)) {\n            if (_.isFunction(subscriber.callback)) {\n                subscriber.callback(data, key);\n            }\n\n            if (!subscriber.withOnyxInstance) {\n                return;\n            }\n\n            // Check if we are subscribing to a collection key and add this item as a collection\n            if (isCollectionKey(subscriber.key)) {\n                subscriber.withOnyxInstance.setState((prevState) => {\n                    const collection = _.clone(prevState[subscriber.statePropertyName] || {});\n                    collection[key] = data;\n                    return {\n                        [subscriber.statePropertyName]: collection,\n                    };\n                });\n            } else {\n                subscriber.withOnyxInstance.setState({\n                    [subscriber.statePropertyName]: data,\n                });\n            }\n        }\n    });\n}\n\n/**\n * Sends the data obtained from the keys to the connection. It either:\n *     - sets state on the withOnyxInstances\n *     - triggers the callback function\n *\n * @private\n * @param {object} config\n * @param {object} [config.withOnyxInstance]\n * @param {string} [config.statePropertyName]\n * @param {function} [config.callback]\n * @param {*|null} val\n * @param {String} key\n */\nfunction sendDataToConnection(config, val, key) {\n    // If the mapping no longer exists then we should not send any data.\n    // This means our subscriber disconnected or withOnyx wrapped component unmounted.\n    if (!callbackToStateMapping[config.connectionID]) {\n        return;\n    }\n\n    if (config.withOnyxInstance) {\n        config.withOnyxInstance.setWithOnyxState(config.statePropertyName, val);\n    } else if (_.isFunction(config.callback)) {\n        config.callback(val, key);\n    }\n}\n\n/**\n * Subscribes a react component's state directly to a store key\n *\n * @example\n * const connectionID = Onyx.connect({\n *     key: ONYXKEYS.SESSION,\n *     callback: onSessionChange,\n * });\n *\n * @param {Object} mapping the mapping information to connect Onyx to the components state\n * @param {String} mapping.key ONYXKEY to subscribe to\n * @param {String} [mapping.statePropertyName] the name of the property in the state to connect the data to\n * @param {Object} [mapping.withOnyxInstance] whose setState() method will be called with any changed data\n *      This is used by React components to connect to Onyx\n * @param {Function} [mapping.callback] a method that will be called with changed data\n *      This is used by any non-React code to connect to Onyx\n * @param {Boolean} [mapping.initWithStoredValues] If set to false, then no data will be prefilled into the\n *  component\n * @returns {Number} an ID to use when calling disconnect\n */\nfunction connect(mapping) {\n    const connectionID = lastConnectionID++;\n    callbackToStateMapping[connectionID] = mapping;\n    callbackToStateMapping[connectionID].connectionID = connectionID;\n\n    if (mapping.initWithStoredValues === false) {\n        return connectionID;\n    }\n\n    // Commit connection only after init passes\n    deferredInitTask.promise\n        .then(() => {\n            // Check to see if this key is flagged as a safe eviction key and add it to the recentlyAccessedKeys list\n            if (isSafeEvictionKey(mapping.key)) {\n                // Try to free some cache whenever we connect to a safe eviction key\n                cache.removeLeastRecentlyUsedKeys();\n\n                if (mapping.withOnyxInstance && !isCollectionKey(mapping.key)) {\n                    // All React components subscribing to a key flagged as a safe eviction\n                    // key must implement the canEvict property.\n                    if (_.isUndefined(mapping.canEvict)) {\n                        throw new Error(\n                            `Cannot subscribe to safe eviction key '${mapping.key}' without providing a canEvict value.`\n                        );\n                    }\n\n                    addLastAccessedKey(mapping.key);\n                }\n            }\n        })\n        .then(getAllKeys)\n        .then((keys) => {\n            // Find all the keys matched by the config key\n            const matchingKeys = _.filter(keys, key => isKeyMatch(mapping.key, key));\n\n            // If the key being connected to does not exist, initialize the value with null\n            if (matchingKeys.length === 0) {\n                sendDataToConnection(mapping, null);\n                return;\n            }\n\n            // When using a callback subscriber we will trigger the callback\n            // for each key we find. It's up to the subscriber to know whether\n            // to expect a single key or multiple keys in the case of a collection.\n            // React components are an exception since we'll want to send their\n            // initial data as a single object when using collection keys.\n            if (mapping.withOnyxInstance && isCollectionKey(mapping.key)) {\n                Promise.all(_.map(matchingKeys, key => get(key)))\n                    .then(values => _.reduce(values, (finalObject, value, i) => ({\n                        ...finalObject,\n                        [matchingKeys[i]]: value,\n                    }), {}))\n                    .then(val => sendDataToConnection(mapping, val));\n            } else {\n                _.each(matchingKeys, (key) => {\n                    get(key).then(val => sendDataToConnection(mapping, val, key));\n                });\n            }\n        });\n\n    return connectionID;\n}\n\n/**\n * Remove the listener for a react component\n * @example\n * Onyx.disconnect(connectionID);\n *\n * @param {Number} connectionID unique id returned by call to Onyx.connect()\n * @param {String} [keyToRemoveFromEvictionBlocklist]\n */\nfunction disconnect(connectionID, keyToRemoveFromEvictionBlocklist) {\n    if (!callbackToStateMapping[connectionID]) {\n        return;\n    }\n\n    // Remove this key from the eviction block list as we are no longer\n    // subscribing to it and it should be safe to delete again\n    if (keyToRemoveFromEvictionBlocklist) {\n        removeFromEvictionBlockList(keyToRemoveFromEvictionBlocklist, connectionID);\n    }\n\n    delete callbackToStateMapping[connectionID];\n}\n\n/**\n * Remove a key from Onyx and update the subscribers\n *\n * @private\n * @param {String} key\n * @return {Promise}\n */\nfunction remove(key) {\n    // Cache the fact that the value was removed\n    cache.set(key, null);\n\n    // Optimistically inform subscribers on the next tick\n    Promise.resolve().then(() => keyChanged(key, null));\n\n    return Storage.removeItem(key);\n}\n\n/**\n * If we fail to set or merge we must handle this by\n * evicting some data from Onyx and then retrying to do\n * whatever it is we attempted to do.\n *\n * @private\n * @param {Error} error\n * @param {Function} onyxMethod\n * @param  {...any} args\n * @return {Promise}\n */\nfunction evictStorageAndRetry(error, onyxMethod, ...args) {\n    logInfo(`Handled error: ${error}`);\n\n    if (error && Str.startsWith(error.message, 'Failed to execute \\'put\\' on \\'IDBObjectStore\\'')) {\n        logAlert('Attempted to set invalid data set in Onyx. Please ensure all data is serializable.');\n        throw error;\n    }\n\n    // Find the first key that we can remove that has no subscribers in our blocklist\n    const keyForRemoval = _.find(recentlyAccessedKeys, key => !evictionBlocklist[key]);\n\n    if (!keyForRemoval) {\n        logAlert('Out of storage. But found no acceptable keys to remove.');\n        throw error;\n    }\n\n    // Remove the least recently viewed key that is not currently being accessed and retry.\n    logInfo(`Out of storage. Evicting least recently accessed key (${keyForRemoval}) and retrying.`);\n    return remove(keyForRemoval)\n        .then(() => onyxMethod(...args));\n}\n\n/**\n * Write a value to our store with the given key\n *\n * @param {String} key ONYXKEY to set\n * @param {*} value value to store\n *\n * @returns {Promise}\n */\nfunction set(key, value) {\n    // Logging properties only since values could be sensitive things we don't want to log\n    logInfo(`set() called for key: ${key}${_.isObject(value) ? ` properties: ${_.keys(value).join(',')}` : ''}`);\n\n    // eslint-disable-next-line no-use-before-define\n    if (hasPendingMergeForKey(key)) {\n        // eslint-disable-next-line max-len\n        logAlert(`Onyx.set() called after Onyx.merge() for key: ${key}. It is recommended to use set() or merge() not both.`);\n    }\n\n    // Adds the key to cache when it's not available\n    cache.set(key, value);\n\n    // Optimistically inform subscribers on the next tick\n    Promise.resolve().then(() => keyChanged(key, value));\n\n    // Write the thing to persistent storage, which will trigger a storage event for any other tabs open on this domain\n    return Storage.setItem(key, value)\n        .catch(error => evictStorageAndRetry(error, set, key, value));\n}\n\n/**\n * Storage expects array like: [[\"@MyApp_user\", value_1], [\"@MyApp_key\", value_2]]\n * This method transforms an object like {'@MyApp_user': myUserValue, '@MyApp_key': myKeyValue}\n * to an array of key-value pairs in the above format\n * @private\n * @param {Record} data\n * @return {Array} an array of key - value pairs <[key, value]>\n */\nfunction prepareKeyValuePairsForStorage(data) {\n    return _.map(data, (value, key) => [key, value]);\n}\n\n/**\n * Sets multiple keys and values\n *\n * @example Onyx.multiSet({'key1': 'a', 'key2': 'b'});\n *\n * @param {Object} data object keyed by ONYXKEYS and the values to set\n * @returns {Promise}\n */\nfunction multiSet(data) {\n    const keyValuePairs = prepareKeyValuePairsForStorage(data);\n\n    _.each(data, (val, key) => {\n        // Update cache and optimistically inform subscribers on the next tick\n        cache.set(key, val);\n        Promise.resolve().then(() => keyChanged(key, val));\n    });\n\n    return Storage.multiSet(keyValuePairs)\n        .catch(error => evictStorageAndRetry(error, multiSet, data));\n}\n\n// Key/value store of Onyx key and arrays of values to merge\nconst mergeQueue = {};\n\n/**\n * @private\n * @param {String} key\n * @returns {Boolean}\n */\nfunction hasPendingMergeForKey(key) {\n    return Boolean(mergeQueue[key]);\n}\n\n/**\n * Given an Onyx key and value this method will combine all queued\n * value updates and return a single value. Merge attempts are\n * batched. They must occur after a single call to get() so we\n * can avoid race conditions.\n *\n * @private\n * @param {String} key\n * @param {*} data\n *\n * @returns {*}\n */\nfunction applyMerge(key, data) {\n    const mergeValues = mergeQueue[key];\n    if (_.isArray(data) || _.every(mergeValues, _.isArray)) {\n        // Array values will always just concatenate\n        // more items onto the end of the array\n        return _.reduce(mergeValues, (modifiedData, mergeValue) => [\n            ...modifiedData,\n            ...mergeValue,\n        ], data || []);\n    }\n\n    if (_.isObject(data) || _.every(mergeValues, _.isObject)) {\n        // Object values are merged one after the other\n        return _.reduce(mergeValues, (modifiedData, mergeValue) => {\n            const newData = lodashMerge({}, modifiedData, mergeValue);\n\n            // We will also delete any object keys that are undefined or null.\n            // Deleting keys is not supported by AsyncStorage so we do it this way.\n            // Remove all first level keys that are explicitly set to null.\n            return _.omit(newData, (value, finalObjectKey) => _.isNull(mergeValue[finalObjectKey]));\n        }, data || {});\n    }\n\n    // If we have anything else we can't merge it so we'll\n    // simply return the last value that was queued\n    return _.last(mergeValues);\n}\n\n/**\n * Merge a new value into an existing value at a key.\n *\n * The types of values that can be merged are `Object` and `Array`. To set another type of value use `Onyx.set()`. Merge\n * behavior uses lodash/merge under the hood for `Object` and simple concatenation for `Array`. However, it's important\n * to note that if you have an array value property on an `Object` that the default behavior of lodash/merge is not to\n * concatenate. See here: https://github.com/lodash/lodash/issues/2872\n *\n * Calls to `Onyx.merge()` are batched so that any calls performed in a single tick will stack in a queue and get\n * applied in the order they were called. Note: `Onyx.set()` calls do not work this way so use caution when mixing\n * `Onyx.merge()` and `Onyx.set()`.\n *\n * @example\n * Onyx.merge(ONYXKEYS.EMPLOYEE_LIST, ['Joe']); // -> ['Joe']\n * Onyx.merge(ONYXKEYS.EMPLOYEE_LIST, ['Jack']); // -> ['Joe', 'Jack']\n * Onyx.merge(ONYXKEYS.POLICY, {id: 1}); // -> {id: 1}\n * Onyx.merge(ONYXKEYS.POLICY, {name: 'My Workspace'}); // -> {id: 1, name: 'My Workspace'}\n *\n * @param {String} key ONYXKEYS key\n * @param {(Object|Array)} value Object or Array value to merge\n * @returns {Promise}\n */\nfunction merge(key, value) {\n    if (mergeQueue[key]) {\n        mergeQueue[key].push(value);\n        return Promise.resolve();\n    }\n\n    mergeQueue[key] = [value];\n    return get(key)\n        .then((data) => {\n            try {\n                const modifiedData = applyMerge(key, data);\n\n                // Clean up the write queue so we\n                // don't apply these changes again\n                delete mergeQueue[key];\n\n                return set(key, modifiedData);\n            } catch (error) {\n                logAlert(`An error occurred while applying merge for key: ${key}, Error: ${error}`);\n            }\n\n            return Promise.resolve();\n        });\n}\n\n/**\n * Merge user provided default key value pairs.\n * @private\n * @returns {Promise}\n */\nfunction initializeWithDefaultKeyStates() {\n    return Storage.multiGet(_.keys(defaultKeyStates))\n        .then((pairs) => {\n            const asObject = _.object(pairs);\n\n            const merged = lodashMerge(asObject, defaultKeyStates);\n            cache.merge(merged);\n            _.each(merged, (val, key) => keyChanged(key, val));\n        });\n}\n\n/**\n * Clear out all the data in the store\n *\n * @returns {Promise<void>}\n */\nfunction clear() {\n    return getAllKeys()\n        .then((keys) => {\n            _.each(keys, (key) => {\n                keyChanged(key, null);\n                cache.set(key, null);\n            });\n        })\n        .then(Storage.clear)\n        .then(initializeWithDefaultKeyStates);\n}\n\n/**\n * Merges a collection based on their keys\n *\n * @example\n *\n * Onyx.mergeCollection(ONYXKEYS.COLLECTION.REPORT, {\n *     [`${ONYXKEYS.COLLECTION.REPORT}1`]: report1,\n *     [`${ONYXKEYS.COLLECTION.REPORT}2`]: report2,\n * });\n *\n * @param {String} collectionKey e.g. `ONYXKEYS.COLLECTION.REPORT`\n * @param {Object} collection Object collection keyed by individual collection member keys and values\n * @returns {Promise}\n */\nfunction mergeCollection(collectionKey, collection) {\n    // Confirm all the collection keys belong to the same parent\n    _.each(collection, (data, dataKey) => {\n        if (!isKeyMatch(collectionKey, dataKey)) {\n            // eslint-disable-next-line max-len\n            throw new Error(`Provided collection does not have all its data belonging to the same parent. CollectionKey: ${collectionKey}, DataKey: ${dataKey}`);\n        }\n    });\n\n    return getAllKeys()\n        .then((persistedKeys) => {\n            // Split to keys that exist in storage and keys that don't\n            const [existingKeys, newKeys] = _.chain(collection)\n                .keys()\n                .partition(key => persistedKeys.includes(key))\n                .value();\n\n            const existingKeyCollection = _.pick(collection, existingKeys);\n            const newCollection = _.pick(collection, newKeys);\n            const keyValuePairsForExistingCollection = prepareKeyValuePairsForStorage(existingKeyCollection);\n            const keyValuePairsForNewCollection = prepareKeyValuePairsForStorage(newCollection);\n\n            const promises = [];\n\n            // New keys will be added via multiSet while existing keys will be updated using multiMerge\n            // This is because setting a key that doesn't exist yet with multiMerge will throw errors\n            if (keyValuePairsForExistingCollection.length > 0) {\n                promises.push(Storage.multiMerge(keyValuePairsForExistingCollection));\n            }\n\n            if (keyValuePairsForNewCollection.length > 0) {\n                promises.push(Storage.multiSet(keyValuePairsForNewCollection));\n            }\n\n            // Prefill cache if necessary by calling get() on any existing keys and then merge original data to cache\n            // and update all subscribers\n            Promise.all(_.map(existingKeys, get)).then(() => {\n                cache.merge(collection);\n                keysChanged(collectionKey, collection);\n            });\n\n            return Promise.all(promises)\n                .catch(error => evictStorageAndRetry(error, mergeCollection, collection));\n        });\n}\n\n/**\n * Initialize the store with actions and listening for storage events\n *\n * @param {Object} [options={}] config object\n * @param {Object} [options.keys={}] `ONYXKEYS` constants object\n * @param {Object} [options.initialKeyStates={}] initial data to set when `init()` and `clear()` is called\n * @param {String[]} [options.safeEvictionKeys=[]] This is an array of keys\n * (individual or collection patterns) that when provided to Onyx are flagged\n * as \"safe\" for removal. Any components subscribing to these keys must also\n * implement a canEvict option. See the README for more info.\n * @param {Number} [options.maxCachedKeysCount=55] Sets how many recent keys should we try to keep in cache\n * Setting this to 0 would practically mean no cache\n * We try to free cache when we connect to a safe eviction key\n * @param {Boolean} [options.captureMetrics] Enables Onyx benchmarking and exposes the get/print/reset functions\n * @param {Boolean} [options.shouldSyncMultipleInstances] Auto synchronize storage events between multiple instances\n * of Onyx running in different tabs/windows. Defaults to true for platforms that support local storage (web/desktop)\n * @param {String[]} [option.keysToDisableSyncEvents=[]] Contains keys for which\n * we want to disable sync event across tabs.\n * @example\n * Onyx.init({\n *     keys: ONYXKEYS,\n *     initialKeyStates: {\n *         [ONYXKEYS.SESSION]: {loading: false},\n *     },\n * });\n */\nfunction init({\n    keys = {},\n    initialKeyStates = {},\n    safeEvictionKeys = [],\n    maxCachedKeysCount = 1000,\n    captureMetrics = false,\n    shouldSyncMultipleInstances = Boolean(global.localStorage),\n    keysToDisableSyncEvents = [],\n} = {}) {\n    if (captureMetrics) {\n        // The code here is only bundled and applied when the captureMetrics is set\n        // eslint-disable-next-line no-use-before-define\n        applyDecorators();\n    }\n\n    if (maxCachedKeysCount > 0) {\n        cache.setRecentKeysLimit(maxCachedKeysCount);\n    }\n\n    // Let Onyx know about all of our keys\n    onyxKeys = keys;\n\n    // Set our default key states to use when initializing and clearing Onyx data\n    defaultKeyStates = initialKeyStates;\n\n    // Let Onyx know about which keys are safe to evict\n    evictionAllowList = safeEvictionKeys;\n\n    // Initialize all of our keys with data provided then give green light to any pending connections\n    Promise.all([\n        addAllSafeEvictionKeysToRecentlyAccessedList(),\n        initializeWithDefaultKeyStates()\n    ])\n        .then(deferredInitTask.resolve);\n\n    if (shouldSyncMultipleInstances && _.isFunction(Storage.keepInstancesSync)) {\n        Storage.keepInstancesSync(keysToDisableSyncEvents, (key, value) => {\n            cache.set(key, value);\n            keyChanged(key, value);\n        });\n    }\n}\n\nconst Onyx = {\n    connect,\n    disconnect,\n    set,\n    multiSet,\n    merge,\n    mergeCollection,\n    clear,\n    init,\n    registerLogger,\n    addToEvictionBlockList,\n    removeFromEvictionBlockList,\n    isSafeEvictionKey,\n};\n\n/**\n * Apply calls statistic decorators to benchmark Onyx\n *\n * @private\n */\nfunction applyDecorators() {\n    // We're requiring the script dynamically here so that it's only evaluated when decorators are used\n    const decorate = require('./metrics');\n\n    // Re-assign with decorated functions\n    /* eslint-disable no-func-assign */\n    get = decorate.decorateWithMetrics(get, 'Onyx:get');\n    set = decorate.decorateWithMetrics(set, 'Onyx:set');\n    multiSet = decorate.decorateWithMetrics(multiSet, 'Onyx:multiSet');\n    clear = decorate.decorateWithMetrics(clear, 'Onyx:clear');\n    merge = decorate.decorateWithMetrics(merge, 'Onyx:merge');\n    mergeCollection = decorate.decorateWithMetrics(mergeCollection, 'Onyx:mergeCollection');\n    getAllKeys = decorate.decorateWithMetrics(getAllKeys, 'Onyx:getAllKeys');\n    initializeWithDefaultKeyStates = decorate.decorateWithMetrics(initializeWithDefaultKeyStates, 'Onyx:defaults');\n    /* eslint-enable */\n\n    // Re-expose decorated methods\n    Onyx.set = set;\n    Onyx.multiSet = multiSet;\n    Onyx.clear = clear;\n    Onyx.merge = merge;\n    Onyx.mergeCollection = mergeCollection;\n\n    // Expose stats methods on Onyx\n    Onyx.getMetrics = decorate.getMetrics;\n    Onyx.resetMetrics = decorate.resetMetrics;\n    Onyx.printMetrics = decorate.printMetrics;\n}\n\nexport default Onyx;\n","import _ from 'underscore';\nimport lodashMerge from 'lodash/merge';\n\n\nconst isDefined = _.negate(_.isUndefined);\n\n/**\n * In memory cache providing data by reference\n * Encapsulates Onyx cache related functionality\n */\nclass OnyxCache {\n    constructor() {\n        /**\n         * @private\n         * Cache of all the storage keys available in persistent storage\n         * @type {Set<string>}\n         */\n        this.storageKeys = new Set();\n\n        /**\n         * @private\n         * Unique list of keys maintained in access order (most recent at the end)\n         * @type {Set<string>}\n         */\n        this.recentKeys = new Set();\n\n        /**\n         * @private\n         * A map of cached values\n         * @type {Record<string, *>}\n         */\n        this.storageMap = {};\n\n        /**\n         * @private\n         * Captured pending tasks for already running storage methods\n         * @type {Record<string, Promise>}\n         */\n        this.pendingPromises = {};\n\n        // bind all public methods to prevent problems with `this`\n        _.bindAll(\n            this,\n            'getAllKeys', 'getValue', 'hasCacheForKey', 'addKey', 'set', 'drop', 'merge',\n            'hasPendingTask', 'getTaskPromise', 'captureTask', 'removeLeastRecentlyUsedKeys',\n            'setRecentKeysLimit'\n        );\n    }\n\n    /**\n     * Get all the storage keys\n     * @returns {string[]}\n     */\n    getAllKeys() {\n        return Array.from(this.storageKeys);\n    }\n\n    /**\n     * Get a cached value from storage\n     * @param {string} key\n     * @returns {*}\n     */\n    getValue(key) {\n        this.addToAccessedKeys(key);\n        return this.storageMap[key];\n    }\n\n    /**\n     * Check whether cache has data for the given key\n     * @param {string} key\n     * @returns {boolean}\n     */\n    hasCacheForKey(key) {\n        return isDefined(this.storageMap[key]);\n    }\n\n    /**\n     * Saves a key in the storage keys list\n     * Serves to keep the result of `getAllKeys` up to date\n     * @param {string} key\n     */\n    addKey(key) {\n        this.storageKeys.add(key);\n    }\n\n    /**\n     * Set's a key value in cache\n     * Adds the key to the storage keys list as well\n     * @param {string} key\n     * @param {*} value\n     * @returns {*} value - returns the cache value\n     */\n    set(key, value) {\n        this.addKey(key);\n        this.addToAccessedKeys(key);\n        this.storageMap[key] = value;\n\n        return value;\n    }\n\n    /**\n     * Forget the cached value for the given key\n     * @param {string} key\n     */\n    drop(key) {\n        delete this.storageMap[key];\n    }\n\n    /**\n     * Deep merge data to cache, any non existing keys will be created\n     * @param {Record<string, *>} data - a map of (cache) key - values\n     */\n    merge(data) {\n        this.storageMap = lodashMerge({}, this.storageMap, data);\n\n        const storageKeys = this.getAllKeys();\n        const mergedKeys = _.keys(data);\n        this.storageKeys = new Set([...storageKeys, ...mergedKeys]);\n        _.each(mergedKeys, key => this.addToAccessedKeys(key));\n    }\n\n    /**\n     * Check whether the given task is already running\n     * @param {string} taskName - unique name given for the task\n     * @returns {*}\n     */\n    hasPendingTask(taskName) {\n        return isDefined(this.pendingPromises[taskName]);\n    }\n\n    /**\n     * Use this method to prevent concurrent calls for the same thing\n     * Instead of calling the same task again use the existing promise\n     * provided from this function\n     * @template T\n     * @param {string} taskName - unique name given for the task\n     * @returns {Promise<T>}\n     */\n    getTaskPromise(taskName) {\n        return this.pendingPromises[taskName];\n    }\n\n    /**\n     * Capture a promise for a given task so other caller can\n     * hook up to the promise if it's still pending\n     * @template T\n     * @param {string} taskName - unique name for the task\n     * @param {Promise<T>} promise\n     * @returns {Promise<T>}\n     */\n    captureTask(taskName, promise) {\n        this.pendingPromises[taskName] = promise.finally(() => {\n            delete this.pendingPromises[taskName];\n        });\n\n        return this.pendingPromises[taskName];\n    }\n\n    /**\n     * @private\n     * Adds a key to the top of the recently accessed keys\n     * @param {string} key\n     */\n    addToAccessedKeys(key) {\n        // Removing and re-adding a key ensures it's at the end of the list\n        this.recentKeys.delete(key);\n        this.recentKeys.add(key);\n    }\n\n    /**\n     * Remove keys that don't fall into the range of recently used keys\n     */\n    removeLeastRecentlyUsedKeys() {\n        if (this.recentKeys.size > this.maxRecentKeysSize) {\n            // Get the last N keys by doing a negative slice\n            const recentlyAccessed = [...this.recentKeys].slice(-this.maxRecentKeysSize);\n            const storageKeys = _.keys(this.storageMap);\n            const keysToRemove = _.difference(storageKeys, recentlyAccessed);\n\n            _.each(keysToRemove, this.drop);\n        }\n    }\n\n    /**\n     * Set the recent keys list size\n     * @param {number} limit\n     */\n    setRecentKeysLimit(limit) {\n        this.maxRecentKeysSize = limit;\n    }\n}\n\nconst instance = new OnyxCache();\n\nexport default instance;\n","/**\n * Synchronous queue that can be used to ensure promise based tasks are run in sequence.\n * Pass to the constructor a function that returns a promise to run the task then add data.\n *\n * @example\n *\n *     const queue = new SyncQueue(({key, val}) => {\n *         return someAsyncProcess(key, val);\n *     });\n *\n *     queue.push({key: 1, val: '1'});\n *     queue.push({key: 2, val: '2'});\n */\nexport default class SyncQueue {\n    /**\n     * @param {Function} run - must return a promise\n     */\n    constructor(run) {\n        this.queue = [];\n        this.isProcessing = false;\n        this.run = run;\n    }\n\n    process() {\n        if (this.isProcessing || this.queue.length === 0) {\n            return;\n        }\n\n        this.isProcessing = true;\n\n        const {data, resolve, reject} = this.queue.shift();\n        this.run(data)\n            .then(resolve)\n            .catch(reject)\n            .finally(() => {\n                this.isProcessing = false;\n                this.process();\n            });\n    }\n\n    /**\n     * @param {*} data\n     * @returns {Promise}\n     */\n    push(data) {\n        return new Promise((resolve, reject) => {\n            this.queue.push({resolve, reject, data});\n            this.process();\n        });\n    }\n}\n","/**\n * Create a deferred task that can be resolved when we call `resolve()`\n * The returned promise will complete when we call `resolve`\n * Useful when we want to wait for a tasks that is resolved from an external action\n *\n * @template T\n * @returns {{ resolve: function(*), promise: Promise<T|void> }}\n */\nexport default function createDeferredTask() {\n    const deferred = {};\n    deferred.promise = new Promise((res) => {\n        deferred.resolve = res;\n    });\n\n    return deferred;\n}\n","// For web-only implementations of Onyx, this module will just be a no-op\n\nfunction decorateWithMetrics() {}\nfunction getMetrics() {}\nfunction printMetrics() {}\nfunction resetMetrics() {}\n\nexport {\n    decorateWithMetrics,\n    getMetrics,\n    resetMetrics,\n    printMetrics,\n};\n","import _ from 'underscore';\nimport Storage from './providers/LocalForage';\n\nconst SYNC_ONYX = 'SYNC_ONYX';\n\n/**\n * Raise an event thorough `localStorage` to let other tabs know a value changed\n * @param {String} onyxKey\n */\nfunction raiseStorageSyncEvent(onyxKey) {\n    global.localStorage.setItem(SYNC_ONYX, onyxKey);\n    global.localStorage.removeItem(SYNC_ONYX, onyxKey);\n}\n\nconst webStorage = {\n    ...Storage,\n\n    /**\n     * Contains keys for which we want to disable sync event across tabs.\n     * @param {String[]} keysToDisableSyncEvents\n     * Storage synchronization mechanism keeping all opened tabs in sync\n     * @param {function(key: String, data: *)} onStorageKeyChanged\n     */\n    keepInstancesSync(keysToDisableSyncEvents, onStorageKeyChanged) {\n        // Override set, remove and clear to raise storage events that we intercept in other tabs\n        this.setItem = (key, value) => Storage.setItem(key, value)\n            .then(() => raiseStorageSyncEvent(key));\n\n        this.removeItem = key => Storage.removeItem(key)\n            .then(() => raiseStorageSyncEvent(key));\n\n        // If we just call Storage.clear other tabs will have no idea which keys were available previously\n        // so that they can call keysChanged for them. That's why we iterate and remove keys one by one\n        this.clear = () => Storage.getAllKeys()\n            .then(keys => _.map(keys, key => this.removeItem(key)))\n            .then(tasks => Promise.all(tasks));\n\n        // This listener will only be triggered by events coming from other tabs\n        global.addEventListener('storage', (event) => {\n            // Ignore events that don't originate from the SYNC_ONYX logic\n            if (event.key !== SYNC_ONYX || !event.newValue) {\n                return;\n            }\n\n            const onyxKey = event.newValue;\n            if (_.contains(keysToDisableSyncEvents, onyxKey)) {\n                return;\n            }\n\n            Storage.getItem(onyxKey)\n                .then(value => onStorageKeyChanged(onyxKey, value));\n        });\n    },\n};\n\nexport default webStorage;\n","import WebStorage from './WebStorage';\n\nexport default WebStorage;\n","/**\n * @file\n * The storage provider based on localforage allows us to store most anything in its\n * natural form in the underlying DB without having to stringify or de-stringify it\n */\n\nimport localforage from 'localforage';\nimport _ from 'underscore';\nimport lodashMerge from 'lodash/merge';\nimport SyncQueue from '../../SyncQueue';\n\nlocalforage.config({\n    name: 'OnyxDB'\n});\n\nconst provider = {\n    /**\n     * Writing very quickly to IndexedDB causes performance issues and can lock up the page and lead to jank.\n     * So, we are slowing this process down by waiting until one write is complete before moving on\n     * to the next.\n     */\n    setItemQueue: new SyncQueue(({key, value, shouldMerge}) => {\n        if (shouldMerge) {\n            return localforage.getItem(key)\n                .then((existingValue) => {\n                    const newValue = _.isObject(existingValue)\n                        ? lodashMerge({}, existingValue, value)\n                        : value;\n                    return localforage.setItem(key, newValue);\n                });\n        }\n\n        return localforage.setItem(key, value);\n    }),\n\n    /**\n     * Get multiple key-value pairs for the give array of keys in a batch\n     * @param {String[]} keys\n     * @return {Promise<Array<[key, value]>>}\n     */\n    multiGet(keys) {\n        const pairs = _.map(\n            keys,\n            key => localforage.getItem(key)\n                .then(value => [key, value])\n        );\n\n        return Promise.all(pairs);\n    },\n\n    /**\n     * Multiple merging of existing and new values in a batch\n     * @param {Array<[key, value]>} pairs\n     * @return {Promise<void>}\n     */\n    multiMerge(pairs) {\n        const tasks = _.map(pairs, ([key, value]) => this.setItemQueue.push({key, value, shouldMerge: true}));\n\n        // We're returning Promise.resolve, otherwise the array of task results will be returned to the caller\n        return Promise.all(tasks).then(() => Promise.resolve());\n    },\n\n    /**\n     * Stores multiple key-value pairs in a batch\n     * @param {Array<[key, value]>} pairs\n     * @return {Promise<void>}\n     */\n    multiSet(pairs) {\n        // We're returning Promise.resolve, otherwise the array of task results will be returned to the caller\n        const tasks = _.map(pairs, ([key, value]) => this.setItem(key, value));\n        return Promise.all(tasks).then(() => Promise.resolve());\n    },\n\n    /**\n     * Clear absolutely everything from storage\n     * @returns {Promise<void>}\n     */\n    clear: localforage.clear,\n\n    /**\n     * Returns all keys available in storage\n     * @returns {Promise<String[]>}\n     */\n    getAllKeys: localforage.keys,\n\n    /**\n     * Get the value of a given key or return `null` if it's not available in storage\n     * @param {String} key\n     * @return {Promise<*>}\n     */\n    getItem: localforage.getItem,\n\n    /**\n     * Remove given key and it's value from storage\n     * @param {String} key\n     * @returns {Promise<void>}\n     */\n    removeItem: localforage.removeItem,\n\n    /**\n     * Sets the value for a given key. The only requirement is that the value should be serializable to JSON string\n     * @param {String} key\n     * @param {*} value\n     * @return {Promise<void>}\n     */\n    setItem(key, value) {\n        return this.setItemQueue.push({key, value});\n    },\n};\n\nexport default provider;\n","/**\n * This is a higher order component that provides the ability to map a state property directly to\n * something in Onyx (a key/value store). That way, as soon as data in Onyx changes, the state will be set and the view\n * will automatically change to reflect the new data.\n */\nimport React from 'react';\nimport _ from 'underscore';\nimport PropTypes from 'prop-types';\nimport Str from 'expensify-common/lib/str';\nimport Onyx from './Onyx';\n\n/**\n * Returns the display name of a component\n *\n * @param {object} component\n * @returns {string}\n */\nfunction getDisplayName(component) {\n    return component.displayName || component.name || 'Component';\n}\n\nexport default function (mapOnyxToState) {\n    // A list of keys that must be present in tempState before we can render the WrappedComponent\n    const requiredKeysForInit = _.chain(mapOnyxToState)\n        .omit(config => config.initWithStoredValues === false)\n        .keys()\n        .value();\n\n    return (WrappedComponent) => {\n        class withOnyx extends React.Component {\n            constructor(props) {\n                super(props);\n\n                this.setWithOnyxState = this.setWithOnyxState.bind(this);\n\n                // This stores all the Onyx connection IDs to be used when the component unmounts so everything can be\n                // disconnected. It is a key value store with the format {[mapping.key]: connectionID}.\n                this.activeConnectionIDs = {};\n\n                // Object holding the temporary initial state for the component while we load the various Onyx keys\n                this.tempState = {};\n\n                this.state = {\n                    // If there are no required keys for init then we can render the wrapped component immediately\n                    loading: requiredKeysForInit.length > 0,\n                };\n            }\n\n            componentDidMount() {\n                // Subscribe each of the state properties to the proper Onyx key\n                _.each(mapOnyxToState, (mapping, propertyName) => {\n                    this.connectMappingToOnyx(mapping, propertyName);\n                });\n                this.checkEvictableKeys();\n            }\n\n            componentDidUpdate(prevProps) {\n                // If any of the mappings use data from the props, then when the props change, all the\n                // connections need to be reconnected with the new props\n                _.each(mapOnyxToState, (mapping, propertyName) => {\n                    const previousKey = Str.result(mapping.key, prevProps);\n                    const newKey = Str.result(mapping.key, this.props);\n\n                    if (previousKey !== newKey) {\n                        Onyx.disconnect(this.activeConnectionIDs[previousKey], previousKey);\n                        delete this.activeConnectionIDs[previousKey];\n                        this.connectMappingToOnyx(mapping, propertyName);\n                    }\n                });\n                this.checkEvictableKeys();\n            }\n\n            componentWillUnmount() {\n                // Disconnect everything from Onyx\n                _.each(mapOnyxToState, (mapping) => {\n                    const key = Str.result(mapping.key, this.props);\n                    const connectionID = this.activeConnectionIDs[key];\n                    Onyx.disconnect(connectionID, key);\n                });\n            }\n\n            /**\n             * This method is used externally by sendDataToConnection to prevent unnecessary renders while a component\n             * still in a loading state. The temporary initial state is saved to the component instance and setState()\n             * only called once all the necessary data has been collected.\n             *\n             * @param {String} statePropertyName\n             * @param {*} val\n             */\n            setWithOnyxState(statePropertyName, val) {\n                if (!this.state.loading) {\n                    this.setState({[statePropertyName]: val});\n                    return;\n                }\n\n                this.tempState[statePropertyName] = val;\n\n                // All state keys should exist and at least have a value of null\n                if (_.some(requiredKeysForInit, key => _.isUndefined(this.tempState[key]))) {\n                    return;\n                }\n\n                this.setState({...this.tempState, loading: false});\n                delete this.tempState;\n            }\n\n            /**\n             * Makes sure each Onyx key we requested has been set to state with a value of some kind.\n             * We are doing this so that the wrapped component will only render when all the data\n             * it needs is available to it.\n             */\n            checkEvictableKeys() {\n                // We will add this key to our list of recently accessed keys\n                // if the canEvict function returns true. This is necessary criteria\n                // we MUST use to specify if a key can be removed or not.\n                _.each(mapOnyxToState, (mapping) => {\n                    if (_.isUndefined(mapping.canEvict)) {\n                        return;\n                    }\n\n                    const canEvict = Str.result(mapping.canEvict, this.props);\n                    const key = Str.result(mapping.key, this.props);\n\n                    if (!Onyx.isSafeEvictionKey(key)) {\n                        // eslint-disable-next-line max-len\n                        throw new Error(`canEvict cannot be used on key '${key}'. This key must explicitly be flagged as safe for removal by adding it to Onyx.init({safeEvictionKeys: []}).`);\n                    }\n\n                    if (canEvict) {\n                        Onyx.removeFromEvictionBlockList(key, mapping.connectionID);\n                    } else {\n                        Onyx.addToEvictionBlockList(key, mapping.connectionID);\n                    }\n                });\n            }\n\n            /**\n             * Takes a single mapping and binds the state of the component to the store\n             *\n             * @param {object} mapping\n             * @param {string|function} mapping.key key to connect to. can be a string or a\n             * function that takes this.props as an argument and returns a string\n             * @param {string} statePropertyName the name of the state property that Onyx will add the data to\n             * @param {boolean} [mapping.initWithStoredValues] If set to false, then no data will be prefilled into the\n             *  component\n             */\n            connectMappingToOnyx(mapping, statePropertyName) {\n                const key = Str.result(mapping.key, this.props);\n\n                this.activeConnectionIDs[key] = Onyx.connect({\n                    ...mapping,\n                    key,\n                    statePropertyName,\n                    withOnyxInstance: this,\n                });\n            }\n\n            render() {\n                if (this.state.loading) {\n                    return null;\n                }\n\n                // Remove any internal state properties used by withOnyx\n                // that should not be passed to a wrapped component\n                let stateToPass = _.omit(this.state, 'loading');\n                stateToPass = _.omit(stateToPass, value => _.isNull(value));\n\n                // Remove any null values so that React replaces them with default props\n                const propsToPass = _.omit(this.props, value => _.isNull(value));\n\n                // Spreading props and state is necessary in an HOC where the data cannot be predicted\n                return (\n                    <WrappedComponent\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...propsToPass}\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...stateToPass}\n                        ref={this.props.forwardedRef}\n                    />\n                );\n            }\n        }\n\n        withOnyx.propTypes = {\n            forwardedRef: PropTypes.oneOfType([\n                PropTypes.func,\n                PropTypes.shape({current: PropTypes.instanceOf(React.Component)}),\n            ]),\n        };\n        withOnyx.defaultProps = {\n            forwardedRef: undefined,\n        };\n        withOnyx.displayName = `withOnyx(${getDisplayName(WrappedComponent)})`;\n        return React.forwardRef((props, ref) => {\n            const Component = withOnyx;\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            return <Component {...props} forwardedRef={ref} />;\n        });\n    };\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_expensify_common_lib_str__;","module.exports = __WEBPACK_EXTERNAL_MODULE_localforage__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash_merge__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","module.exports = __WEBPACK_EXTERNAL_MODULE_underscore__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","import Onyx from './Onyx';\nimport withOnyx from './withOnyx';\n\nexport default Onyx;\nexport {withOnyx};\n"],"names":["logger","registerLogger","callback","logAlert","message","level","logInfo","lastConnectionID","callbackToStateMapping","onyxKeys","recentlyAccessedKeys","evictionAllowList","evictionBlocklist","defaultKeyStates","deferredInitTask","get","key","cache","hasCacheForKey","Promise","resolve","getValue","taskName","hasPendingTask","getTaskPromise","promise","Storage","getItem","then","val","set","catch","err","captureTask","getAllKeys","storedKeys","length","keys","_","each","addKey","isCollectionKey","contains","values","COLLECTION","isKeyMatch","configKey","Str","startsWith","isSafeEvictionKey","testKey","some","removeLastAccessedKey","without","addLastAccessedKey","push","removeFromEvictionBlockList","connectionID","addToEvictionBlockList","addAllSafeEvictionKeysToRecentlyAccessedList","safeEvictionKey","getCachedCollection","collectionKey","collectionMemberKeys","filter","storedKey","reduce","prev","curr","cachedValue","keysChanged","collection","subscriber","isSubscribedToCollectionKey","isSubscribedToCollectionMemberKey","isFunction","cachedCollection","data","dataKey","withOnyxInstance","setState","prevState","finalCollection","clone","statePropertyName","dataFromCollection","isUndefined","isObject","keyChanged","isNull","sendDataToConnection","config","setWithOnyxState","connect","mapping","initWithStoredValues","removeLeastRecentlyUsedKeys","canEvict","Error","matchingKeys","all","map","finalObject","value","i","disconnect","keyToRemoveFromEvictionBlocklist","remove","removeItem","evictStorageAndRetry","error","onyxMethod","args","keyForRemoval","find","join","hasPendingMergeForKey","setItem","prepareKeyValuePairsForStorage","multiSet","keyValuePairs","mergeQueue","Boolean","applyMerge","mergeValues","isArray","every","modifiedData","mergeValue","newData","omit","finalObjectKey","last","merge","initializeWithDefaultKeyStates","multiGet","pairs","asObject","object","merged","clear","mergeCollection","persistedKeys","chain","partition","includes","existingKeys","newKeys","existingKeyCollection","pick","newCollection","keyValuePairsForExistingCollection","keyValuePairsForNewCollection","promises","multiMerge","init","initialKeyStates","safeEvictionKeys","maxCachedKeysCount","captureMetrics","shouldSyncMultipleInstances","global","localStorage","keysToDisableSyncEvents","applyDecorators","setRecentKeysLimit","keepInstancesSync","Onyx","decorate","require","decorateWithMetrics","getMetrics","resetMetrics","printMetrics","isDefined","negate","OnyxCache","storageKeys","Set","recentKeys","storageMap","pendingPromises","bindAll","Array","from","addToAccessedKeys","add","mergedKeys","finally","delete","size","maxRecentKeysSize","recentlyAccessed","slice","keysToRemove","difference","drop","limit","instance","SyncQueue","run","queue","isProcessing","shift","reject","process","createDeferredTask","deferred","res","SYNC_ONYX","raiseStorageSyncEvent","onyxKey","webStorage","onStorageKeyChanged","tasks","addEventListener","event","newValue","WebStorage","localforage","name","provider","setItemQueue","shouldMerge","existingValue","getDisplayName","component","displayName","mapOnyxToState","requiredKeysForInit","WrappedComponent","withOnyx","props","bind","activeConnectionIDs","tempState","state","loading","propertyName","connectMappingToOnyx","checkEvictableKeys","prevProps","previousKey","result","newKey","stateToPass","propsToPass","forwardedRef","React","Component","propTypes","PropTypes","oneOfType","func","shape","current","instanceOf","defaultProps","undefined","forwardRef","ref"],"sourceRoot":""}